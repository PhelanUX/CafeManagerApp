/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import Controller.EController;
//import com.mysql.cj.xdevapi.Table;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import Controller.*;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.List;
import java.util.Vector;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import static javax.swing.JOptionPane.showMessageDialog;
/**
 *
 * @author PhelanUX
 */
public class EditDrink extends javax.swing.JFrame {

    /**
     * Creates new form Employee
     */
    public String idsql;
    public String Nameedit,phoneedit;
    public int wt,wtf;
    public EditDrink() {
        initComponents();
        init();
       
        
    }
    
    public void init(){
        setTime();
        EDController e=new EDController();
        List<model.Drink> listInss=e.getAllInfo();
        DefaultTableModel model= (DefaultTableModel)jTable1.getModel();
        for(model.Drink ee:listInss){
            model.addRow(new Object[]{ee.getId(),ee.getName(),ee.getPrice()});
        }        
        

        // Ghi đè phương thức isCellEditable() để chặn chỉnh sửa
        jTable1.setModel(new DefaultTableModel(model.getDataVector(), getColumnNames(model)) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return false; // Chặn tất cả các ô không cho phép chỉnh sửa
            }
        });
    }
    private Vector<String> getColumnNames(DefaultTableModel model) {
        Vector<String> columnNames = new Vector<>();
        for (int i = 0; i < model.getColumnCount(); i++) {
            columnNames.add(model.getColumnName(i));
        }
        return columnNames;
    }
    public void reset(){
        NameDrink.setText("");
        PriceDrink.setText("");
        IdText.setText("0");
    }
    public void refreshTable() {
    DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
    model.setRowCount(0); // Xóa tất cả các hàng hiện có 
    
    // Thêm dữ liệu mới 
    EDController e = new EDController();
    List<model.Drink> listInss = e.getAllInfo();
    for (model.Drink ee : listInss) {
        model.addRow(new Object[]{ee.getId(), ee.getName(), ee.getPrice()});
        }
    }
    private boolean isNumeric(String str) {
    // Sử dụng biểu thức chính quy để kiểm tra xem chuỗi có phải là số hay không
    String regex = "^[0-9 ]*$";
    return str != null && str.matches(regex);
    }
    public boolean containsSpecialCharacter(String str) {
    // Sử dụng biểu thức chính quy để kiểm tra xem chuỗi có chứa ký tự đặc biệt hay không
         return str != null && !str.matches(".*[$#*@].*");
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jTextTime = new javax.swing.JLabel();
        jTextDate = new javax.swing.JLabel();
        jToggleButton1 = new javax.swing.JToggleButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        NameDrink = new javax.swing.JTextField();
        PriceDrink = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        EditBtn = new javax.swing.JToggleButton();
        IdText = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        imgLabel = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        ULImageBtn = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chỉnh sửa đồ uống");

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("sansserif", 0, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 102, 102));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Chỉnh sửa đồ uống");

        jTextTime.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N

        jTextDate.setFont(new java.awt.Font("sansserif", 1, 18)); // NOI18N

        jToggleButton1.setBackground(new java.awt.Color(0, 102, 102));
        jToggleButton1.setForeground(new java.awt.Color(51, 0, 51));
        jToggleButton1.setText("Trở về");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Tên đồ uống", "Giá"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable1);

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(51, 51, 51));
        jLabel2.setText("Tên đồ uống:");

        NameDrink.setBackground(new java.awt.Color(255, 255, 255));
        NameDrink.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        NameDrink.setForeground(new java.awt.Color(51, 51, 51));

        PriceDrink.setBackground(new java.awt.Color(255, 255, 255));
        PriceDrink.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        PriceDrink.setForeground(new java.awt.Color(51, 51, 51));

        jLabel3.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(51, 51, 51));
        jLabel3.setText("Giá đồ uống:");

        EditBtn.setBackground(new java.awt.Color(0, 102, 102));
        EditBtn.setForeground(new java.awt.Color(51, 0, 51));
        EditBtn.setText("Chỉnh sửa");
        EditBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditBtnActionPerformed(evt);
            }
        });

        IdText.setEditable(false);
        IdText.setBackground(new java.awt.Color(255, 255, 255));
        IdText.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        IdText.setForeground(new java.awt.Color(51, 51, 51));
        IdText.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                IdTextMouseClicked(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(51, 51, 51));
        jLabel4.setText("ID:");

        imgLabel.setForeground(new java.awt.Color(0, 0, 0));
        imgLabel.setText("Chưa có ảnh được chọn");
        imgLabel.setName("default.ipg"); // NOI18N

        jLabel6.setFont(new java.awt.Font("sansserif", 0, 14)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(51, 51, 51));
        jLabel6.setText("Ảnh:");

        ULImageBtn.setBackground(new java.awt.Color(0, 102, 102));
        ULImageBtn.setForeground(new java.awt.Color(51, 0, 51));
        ULImageBtn.setText("Tải ảnh lên");
        ULImageBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ULImageBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jTextTime, javax.swing.GroupLayout.PREFERRED_SIZE, 128, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(IdText)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(PriceDrink, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(NameDrink, javax.swing.GroupLayout.PREFERRED_SIZE, 292, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(EditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(imgLabel)
                                        .addGap(45, 45, 45)
                                        .addComponent(ULImageBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextDate, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(84, 84, 84)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextDate, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextTime, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(NameDrink, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(17, 17, 17)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(PriceDrink, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel4)
                            .addComponent(IdText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(34, 34, 34)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(imgLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6)
                            .addComponent(ULImageBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(EditBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jToggleButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void IdTextMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_IdTextMouseClicked
        JOptionPane.showMessageDialog(null, "không thể sửa trường id của đồ uống");
    }//GEN-LAST:event_IdTextMouseClicked

    private void EditBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditBtnActionPerformed
        if(!containsSpecialCharacter(NameDrink.getText())|| NameDrink.getText().equals("")){
            JOptionPane.showMessageDialog(null, "Tên dồ uống và giá không được chứa kí tự đặc biệt hoặc rỗng");
        }else if(!isNumeric(PriceDrink.getText())){
            JOptionPane.showMessageDialog(null, "Giá dồ uống chỉ được phép chứa số");

        }else{
            BufferedImage img = iconToBufferedImage(imgLabel.getIcon());    
            int id=Integer.parseInt(IdText.getText());
            String namee =NameDrink.getText().trim();
            String price= PriceDrink.getText().trim();
            String format =checkImg(imgLabel.getName());
            EDController e= new EDController();
            //e.update(id, namee, price);
            e.updateWithImage(id, namee, price, img, format);
            reset();
            refreshTable();
            
        }
        EditBtn.setSelected(false);
    }//GEN-LAST:event_EditBtnActionPerformed
    public String checkImg(String fileName){
               if (fileName.toLowerCase().endsWith(".jpg") || fileName.toLowerCase().endsWith(".jpeg")) {
        return "jpg";
    } else if (fileName.toLowerCase().endsWith(".png")) {
        return "png";
    } else if (fileName.toLowerCase().endsWith(".gif")) {
        return "gif";
    } else {
        return "png"; // mặc định là PNG
    }
    }
    public static BufferedImage iconToBufferedImage(Icon icon) {
        // Kiểm tra nếu icon không null
        if (icon instanceof ImageIcon) {
            // Chuyển đổi ImageIcon thành BufferedImage
            Image img = ((ImageIcon) icon).getImage();
            // Tạo BufferedImage từ Image
            BufferedImage bufferedImage = new BufferedImage(img.getWidth(null), img.getHeight(null), BufferedImage.TYPE_INT_ARGB);
            Graphics2D g2d = bufferedImage.createGraphics();
            g2d.drawImage(img, 0, 0, null);
            g2d.dispose();
            return bufferedImage;
        }
        return null; // Trả về null nếu icon không phải là ImageIcon
    }
    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        int index=jTable1.getSelectedRow();
        String id=jTable1.getValueAt(index, 0).toString();
        String name=jTable1.getValueAt(index, 1).toString();
        String phone=jTable1.getValueAt(index, 2).toString();
        int idint=Integer.parseInt(id);
        IdText.setText(id);
        NameDrink.setText(name);
        PriceDrink.setText(phone);
        EDController edc= new EDController();
        BufferedImage img= edc.getImageFromDatabase(idint);
        ImageIcon icon = new ImageIcon(img);
        imgLabel.setIcon(icon); // imgLabel là JLabel bạn muốn hiển thị ảnh
        imgLabel.setText("");
    }//GEN-LAST:event_jTable1MouseClicked

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        EDController e=new EDController();
        e.Back();
        this.dispose();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void ULImageBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ULImageBtnActionPerformed
        JFileChooser fileChooser= new JFileChooser();
        int option= fileChooser.showOpenDialog(this);
        if(option == JFileChooser.APPROVE_OPTION){
        File file= fileChooser.getSelectedFile();
        try{
            BufferedImage img= ImageIO.read(file);
            Image scaleImg=img.getScaledInstance(imgLabel.getWidth(), imgLabel.getHeight(), WIDTH);
            imgLabel.setIcon(new ImageIcon(scaleImg));
            imgLabel.setText(""); 
            imgLabel.setName(file.getName());
        }catch(IOException ioException){
            ioException.printStackTrace();
            JOptionPane.showMessageDialog(rootPane, "Error loading image");
            }
        }
        ULImageBtn.setSelected(false);
        
    }//GEN-LAST:event_ULImageBtnActionPerformed
    /*private void importDataToJTable() {
    try {
        //  Kết nối đến cơ sở dữ liệu
        Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/cafemanager", "root", "");

        //  Thực thi câu truy vấn SQL
        Statement stmt = conn.createStatement();
        ResultSet rs = stmt.executeQuery("SELECT * FROM drink");

        //  Đưa dữ liệu vào DefaultTableModel
        DefaultTableModel model = new DefaultTableModel(new String[]{"ID", "Tên dồ uống", "Giá"}, 0);
        while(rs.next()) {
            String col2 = rs.getString("tensp");
            String col3 = rs.getString("dongia");
            String col1 = rs.getString("masp");
            
            model.addRow(new Object[]{col1, col2, col3});
        }

        //  Đặt DefaultTableModel này cho JTable
        jTable1.setModel(model);

    } catch (Exception ex) {
        ex.printStackTrace();
        }
    }*/
       
    /**
     * @param args the command line arguments
     */
    
    private void setTime(){
        
        new Thread(new Runnable(){
            @Override
            public void run(){
                while(true){
                    try {
                        Thread.sleep(100);
                    } catch (InterruptedException ex) {
                        java.util.logging.Logger.getLogger(Revenue.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
                    }
                     Date date = new Date();
                    SimpleDateFormat tf = new SimpleDateFormat("HH:mm:ss aa");
                    SimpleDateFormat df = new SimpleDateFormat("EEEE, dd-MM-yyyy");
                    
                    String time = tf.format(date);
                    jTextTime.setText(time.split(" ")[0] + " " + time.split(" ")[1]);
                    jTextDate.setText(df.format(date));
                    
                }
            }           
        }).start();
    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EditDrink.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EditDrink.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EditDrink.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EditDrink.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EditDrink().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton EditBtn;
    private javax.swing.JTextField IdText;
    private javax.swing.JTextField NameDrink;
    private javax.swing.JTextField PriceDrink;
    private javax.swing.JToggleButton ULImageBtn;
    private javax.swing.JLabel imgLabel;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel jTextDate;
    private javax.swing.JLabel jTextTime;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
